stages:
  - CodeQuality
  - deploy

Eslint:
  stage: CodeQuality
  image: node:12-alpine
  only:
    - merge_requests
    - master
  before_script:
    # install jq
    - |
      apk update \
       && apk add jq \
       && rm -rf /var/cache/apk/*
    # install eslint
    - |
      npm i eslint \
      eslint-config-standard \
      eslint-plugin-import \
      eslint-plugin-node \
      eslint-plugin-promise \
      eslint-plugin-standard \
      eslint-plugin-vue \
      babel-eslint
  script:
    - ./.gitlab/bin/eslint.sh > code-quality-eslint.json
    - ./node_modules/.bin/eslint -c ./.eslintrc ./resources
  artifacts:
    expire_in: never
    reports:
      codequality: code-quality-eslint.json

PHP:
  stage: CodeQuality
  image: composer:2
  only:
    - merge_requests
    - master
  before_script:
    # install redis
    - |
      apk --no-cache add pcre-dev freetype-dev libpng-dev libjpeg-turbo-dev libzip-dev zip unzip ${PHPIZE_DEPS} \
        && pecl install redis \
        && docker-php-ext-enable redis \
        && apk del pcre-dev ${PHPIZE_DEPS} \
        && rm -rf /tmp/pear \
        && docker-php-ext-configure gd --with-freetype --with-jpeg \
        && docker-php-ext-configure zip \
        && docker-php-ext-install gd pcntl zip
    - composer install
  script:
    - ./vendor/bin/phpcs --standard=./.gitlab/etc/.php-cs-rules.xml ./app/
    - ./vendor/bin/phpmd ./app/ ansi ./.gitlab/etc/.php-md-rules.xml
    - ./vendor/bin/phpstan analyse -c ./.gitlab/etc/.phpstan.neon --memory-limit=2G

staging-build-deploy:
  image: docker:19.03.1
  stage: deploy
  when: manual
  services:
    - docker:19.03.1-dind
  environment:
    name: staging
    url: https://nac.staging.yipl.com.np/

  before_script:
    - export DOCKER_REGISTRY_USER=$DOCKER_REGISTRY_USER # built-in GitLab Registry User
    - export DOCKER_REGISTRY_PASSWORD=$DOCKER_REGISTRY_PASSWORD # built-in GitLab Registry Password
    - export DOCKER_REGISTRY_URL=$DOCKER_REGISTRY_URL # built-in GitLab Registry URL
    - export COMMIT_HASH=$CI_COMMIT_SHA # Your current commit sha
    - export IMAGE_NAME_WITH_REGISTRY_PREFIX=$DOCKER_REGISTRY_URL # Your repository prefixed with GitLab Registry URL
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY_URL # Instructs GitLab to login to its registry

  script:
    - echo "Building..." # MAKE SURE NO SPACE ON EITHER SIDE OF = IN THE FOLLOWING LINE
    - export CONTAINER_FULL_IMAGE_NAME_WITH_TAG=$IMAGE_NAME_WITH_REGISTRY_PREFIX/agri-census:$COMMIT_HASH
    - echo "setting host to ${APP_ADMIN_DOMAIN}"
    - docker build --build-arg APP_ADMIN_DOMAIN=${APP_ADMIN_DOMAIN} --build-arg CACHE_DRIVER=file -f .gitlab/deploy/Dockerfile --pull -t agri-census .
    - docker tag agri-census "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - docker push "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - echo $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
    - echo "Deploying on CapRover..."
    - docker run caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl $CAPROVER_URL --caproverPassword "$CAPROVER_PASSWORD" --caproverApp $CAPROVER_APP --imageName $CONTAINER_FULL_IMAGE_NAME_WITH_TAG

production-build-deploy:
  image: docker:19.03.1
  stage: deploy
  tags:
    - agriprod
  when: manual
  services:
    - docker:19.03.1-dind
  environment:
    name: production
    url: https://agricensus.cbs.gov.np/

  before_script:   
    - export DOCKER_REGISTRY_USER=$DOCKER_REGISTRY_USER # built-in GitLab Registry User
    - export DOCKER_REGISTRY_PASSWORD=$DOCKER_REGISTRY_PASSWORD # built-in GitLab Registry Password
    - export DOCKER_REGISTRY_URL=$DOCKER_REGISTRY_URL # built-in GitLab Registry URL
    - export COMMIT_HASH=$CI_COMMIT_SHA # Your current commit sha
    - export IMAGE_NAME_WITH_REGISTRY_PREFIX=$DOCKER_REGISTRY_URL # Your repository prefixed with GitLab Registry URL
    - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY_URL # Instructs GitLab to login to its registry

  script:
    - echo "Building..." # MAKE SURE NO SPACE ON EITHER SIDE OF = IN THE FOLLOWING LINE
    - export CONTAINER_FULL_IMAGE_NAME_WITH_TAG=$IMAGE_NAME_WITH_REGISTRY_PREFIX/agri-census:$COMMIT_HASH
    - echo "setting host to ${APP_ADMIN_DOMAIN}"
    - docker build --build-arg APP_ADMIN_DOMAIN=${APP_ADMIN_DOMAIN} --build-arg CACHE_DRIVER=file -f .gitlab/deploy/Dockerfile --pull -t agri-census .
    - docker tag agri-census "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - docker push "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
    - echo $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
    - echo "Deploying on CapRover..."
    - docker run --network host caprover/cli-caprover:2.2.3 caprover deploy --caproverUrl $CAPROVER_URL --caproverPassword "$CAPROVER_PASSWORD" --caproverApp $CAPROVER_APP --imageName   $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
